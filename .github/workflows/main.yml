name: Python CI

on:
  push:
    branches: [ main ] # Changed from master to main
  pull_request:
    branches: [ main ] # Changed from master to main

jobs:
  test: # Renamed from build to test for clarity
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Flask
    - name: Test with unittest
      run: |
        python -m unittest discover tests

  benchmark:
    runs-on: ubuntu-latest
    needs: test # Runs after the test job
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Fetches all history, needed for comparison

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install dependencies # Flask might not be strictly needed by benchmark script, but good for consistency
      run: |
        python -m pip install --upgrade pip
        pip install Flask

    - name: Run benchmarks on current code
      id: current_benchmarks
      run: |
        python tools/benchmark_engines.py --dataset-sizes="1000,5000" --output-results-file="current_results.json" --runs-per-test=1
        echo "::set-output name=results_file::current_results.json"

    - name: Run benchmarks on base commit (PR only)
      id: base_benchmarks
      if: github.event_name == 'pull_request'
      run: |
        git checkout ${{ github.event.pull_request.base.sha }}
        # Re-install dependencies in case they changed, though for this project it's unlikely
        # python -m pip install --upgrade pip
        # pip install Flask
        python tools/benchmark_engines.py --dataset-sizes="1000,5000" --output-results-file="base_results.json" --runs-per-test=1
        echo "::set-output name=results_file::base_results.json"
        git checkout ${{ github.event.pull_request.head.sha }} # Checkout back to PR head

    - name: Display benchmark results
      if: always() # Ensure this runs even if previous steps fail
      run: |
        echo "Benchmark Results for Current Code (HEAD):"
        cat current_results.json || echo "current_results.json not found."
        
        if [ -f "base_results.json" ]; then
          echo ""
          echo "Benchmark Results for Base Commit:"
          cat base_results.json || echo "base_results.json not found."
          echo ""
          echo "Simple diff (lines changed):"
          diff -u base_results.json current_results.json || true 
        fi

    - name: Upload benchmark results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: |
          current_results.json
          base_results.json
        if-no-files-found: ignore # Don't fail if base_results.json is not there
